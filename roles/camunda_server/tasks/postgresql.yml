---
- name: Install PostgreSQL
  include_role:
    name: postgresql
  vars:
    postgresql_provision: false

# - name: Create list of databases.
#   set_fact:
#     databases: "['camunda', '{{ camunda_database_name }}']"

# - name: Create databases.
#   postgresql_db:
#     state: present
#     name: "{{ item }}"
#   with_items: "{{ databases }}"
#   become: true
#   become_user: postgres

# - name: Create Camunda schemas.
#   command: "psql -U 'postgres' -d 'camunda' -f '{{ item }}'"
#   with_items:
#     - /var/lib/camunda/sql/create/postgres_engine_7.17.0-alpha2.sql
#     - /var/lib/camunda/sql/create/postgres_identity_7.17.0-alpha2.sql
#   become_user: postgres
#   become: true
#   register: sql_response_variable


# - name: Grant "postgres" user permissions on databases.
#   with_items: "{{ databases }}"

- name: Create tempfile to store `.sql` file
  tempfile:
    state: file
    suffix: sql
  register: temp_sql

- name: Store `.sql` file in tempfile
  template:
    src: setup.sql.j2
    dest: "{{ temp_sql.path }}"
    mode: 444

- name: Apply `.sql` file
  command: "psql -U 'postgres' -d 'camunda' -f {{ temp_sql.path }}"
  become_user: postgres
  become: true

# - name: Download jdbc driver
#   get_url: 
#     dest: /var/lib/camunda/server/apache-tomcat-9.0.52/lib/postgresql-42.4.0.jar
#     url: https://jdbc.postgresql.org/download/postgresql-42.4.0.jar

# - name: Create module.xml
#   copy:
#     src: module.xml
#     dest: /var/lib/camunda/server/apache-tomcat-9.0.52/lib/module.xml
#     owner: root
#     group: root
#     mode: 0644

# - name: Edit `server.xml` file to use PostgreSQL
#   lineinfile:
#     path: /var/lib/camunda/server/apache-tomcat-9.0.52/conf/server.xml
#     regexp: "{{ item.original }}"
#     line: "{{ item.replacement }}"
#     state: present
#   with_items:
#     - {"original": 'driverClassName="org.h2.Driver"', "replacement": '              driverClassName="org.postgresql.Driver"'}
#     - {"original": 'url="jdbc:h2:./camunda-h2-dbs/process-engine;MVCC=TRUE;TRACE_LEVEL_FILE=0;DB_CLOSE_ON_EXIT=FALSE"', "replacement": '              url="jdbc:postgresql://localhost:5432/camunda"'}
#     - {"original": 'username="sa"', "replacement": '              username="postgres"'}
#     - {"original": 'password="sa"', "replacement": '              password="{{ camunda_postgresql_password }}"'}

# - name: add camunda listener to Tomcat server.xml
#   lineinfile:
#     path: /var/lib/camunda/server/apache-tomcat-9.0.52/conf/server.xml
#     insertafter: '<Listener className="org.apache.catalina.core.JreMemoryLeakPreventionListener" />'
#     line: '<Listener className="org.camunda.bpm.container.impl.tomcat.TomcatBpmPlatformBootstrap" />'

# - name: set file access rights for files in tomcat lib dir
#   command: "chmod -R 0755 /var/lib/camunda/server/apache-tomcat-9.0.52/lib"

# - name: set file access tights for tomcat ./conf/bpm-platform.xml
#   command: "chmod 0755 /var/lib/camunda/server/apache-tomcat-9.0.52/conf/bpm-platform.xml"

# # Edit standalone.xml of Camunda BPM.
# - name: Store xml replacement string in variable
#   set_fact:
#     xml_replacement: "{{ lookup('template', './templates/bpm-platform.xml.j2') }}"
    
# - name: Edit camunda.xml
#   lineinfile:
#     path: /var/lib/camunda/server/apache-tomcat-9.0.52/conf/bpm-platform.xml
#     regex: <datasource>java:jdbc/ProcessEngine</datasource>
#     line: "{{ xml_replacement }}"
#     state: present
...
