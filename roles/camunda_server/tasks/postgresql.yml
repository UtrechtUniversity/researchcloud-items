---
- name: Install PostgreSQL
  include_role:
    name: postgresql
  vars:
    postgresql_provision: false

- name: Create list of databases.
  set_fact:
    databases: "['Camunda', '{{ camunda_database_name }}']"

- name: Create databases.
  postgresql_db:
    state: present
    name: "{{ item }}"
  with_items: "{{ databases }}"
  become: true
  become_user: postgres

- name: Load `.sql` files to create schemas.
  set_fact:
    schemas: "{{ schemas | default([]) + [{'name': {{ item.name }} , 'var': lookup('file', {{ item.location }})}] }}"
    with_items:
    - {'name': 'camunda_engine', 'location': '/var/lib/camunda/sql/create/postgres_engine_7.17.0-alpha2.sql'}
    - {'name': 'camunda_identity', 'location': '/var/lib/camunda/sql/create/postgres_identity_7.17.0-alpha2.sql'}

- name: Create Camunda schemas.
  command: "psql Camunda -c {{ item.var }}"
  with_items: 
    - schemas
  become_user: postgres
  register: sql_response_variable


# - name: Grant "postgres" user permissions on databases.
#   with_items: "{{ databases }}"
  

# - name: Download jdbc driver


# - name: Create module.xml


# - name: Edit standalone.xml of Camunda BPM.

...
