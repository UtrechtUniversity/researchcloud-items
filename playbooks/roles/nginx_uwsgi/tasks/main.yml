---
# This playbook prepares the ground for serving a Python webapp via uwsgi, with nginx as reverse proxy.
# It assumes:
# - that nginx is already installed, via the SRC-Nginx component.
# - that the Python application is already present in {{ uwsgi_app_dir }}/{{ uwsgi_app_path }}
#
# Note that if you're adding/modifying the Python app after running this playbook
# you need to restart the service "uwsgi-<yourappname>".

- name: Create uwsgi app dir
  file:
    path: "{{ uwsgi_app_dir }}"
    state: directory
    owner: www-data
    group: www-data
    mode: "0750"

- name: Install uwsgi
  when: not uwsgi_venv
  package:
    name:
      - uwsgi
      - uwsgi-plugin-python3
    state: present

- name: Install uwsgi
  when: uwsgi_venv
  pip:
    name:
      - uwsgi
    state: present # only install if not yet present, otherwise keep existing
    virtualenv: "{{ uwsgi_venv }}"

- name: Configure uwsgi reverse proxy in nginx
  include_role:
    name: nginx_reverse_proxy
  vars:
    nginx_reverse_proxy_locations: "{{ [dict(uwsgi_default_proxy_config, **uwsgi_proxy_config)] }}"

- name: Create uwsgi ini file for app
  template:
    src: uwsgi-example.ini.j2
    dest: "{{ uwsgi_app_dir }}/{{ uwsgi_app_name }}.ini"
    owner: root
    group: www-data
    mode: "0644"

- name: Create service file for app
  template:
    src: uwsgi.service.j2
    dest: /etc/systemd/system/uwsgi-{{ uwsgi_app_name }}.service
    owner: root
    group: root
    mode: "0640"

- name: Create log directory
  file:
    path: "{{ uwsgi_log_dir }}"
    owner: www-data
    group: www-data
    mode: "0750"
    state: directory

- name: Enable logrotation for app
  blockinfile:
    path: /etc/logrotate.d/uwsgi
    block: >
      {{ uwsgi_log_dir }}/*.log {
        daily
        rotate 5
        size 50M
        compress
        delaycompress
        missingok
        copytruncate
      }
    create: true

- name: Start app service
  systemd_service:
    name: uwsgi-{{ uwsgi_app_name }}
    state: started
    enabled: true
