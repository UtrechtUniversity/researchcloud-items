---
- name: Get info on venv group
  when: not _jupyterhub_app_venv == 'system'
  ansible.builtin.stat:
    path: "{{ _jupyterhub_app_venv }}"
  register: jupyterhub_app_stat

- name: Fail if venv does not exist
  when:
    - not _jupyterhub_app_venv == 'system'
    - not (jupyterhub_app_stat.stat.isdir is defined and jupyterhub_app_stat.stat.isdir)
  ansible.builtin.fail:
    msg: "Could not find venv in {{ _jupyterhub_app_venv }}. Exiting!"

- name: Install virtualenv dependency
  when: _jupyterhub_app_venv != 'system' and not 'uv' in jupyterhub_app_pip_executable
  ansible.builtin.pip:
    name: virtualenv
    break_system_packages: "{{ ansible_version.full is ansible.builtin.version('2.17', '>=') | ternary(true, omit) }}"

- name: Install jupyter-server-proxy
  notify: Restart JupyterHub
  ansible.builtin.pip:
    executable: "{{ _jupyterhub_app_system_pip | ternary(omit, jupyterhub_app_pip_executable) }}"
    name: jupyter-server-proxy
    virtualenv: "{{ (_jupyterhub_app_venv == 'system' or not _jupyterhub_app_system_pip) | ternary(omit, _jupyterhub_app_venv) }}"
  environment:
    VIRTUAL_ENV: "{{ _jupyterhub_app_venv }}"

- name: Install extension into venv
  notify: Restart JupyterHub
  when: jupyterhub_app_pip | length > 0
  ansible.builtin.pip:
    executable: "{{ _jupyterhub_app_system_pip | ternary(omit, jupyterhub_app_pip_executable) }}"
    name: "{{ jupyterhub_app_pip }}"
    virtualenv: "{{ (_jupyterhub_app_venv == 'system' or not _jupyterhub_app_system_pip) | ternary(omit, _jupyterhub_app_venv) }}"
  environment:
    VIRTUAL_ENV: "{{ _jupyterhub_app_venv }}"

- name: Add jupyter-serverproxy traitlets config
  when: not (jupyterhub_app_pip | length > 0) and (jupyterhub_app_server_config | length) > 0
  notify: Restart JupyterHub
  ansible.builtin.blockinfile:
    path: "{{ _jupyterhub_app_config_dir }}/jupyter_server_config.py"
    owner: root
    group: "{{ jupyterhub_app_stat.stat.gr_name }}"
    mode: "0644"
    block: "{{ jupyterhub_app_server_config }}"
    create: true
    marker: "# {mark} ANSIBLE MANAGED BLOCK -- {{ jupyterhub_app_name }}"

- name: Install standalone config
  when: jupyterhub_app_standalone_config | length > 0
  block:

    - name: Create standalone config dir
      ansible.builtin.file:
        dest: "{{ _jupyterhub_app_standalone_config_dir }}"
        state: directory
        owner: root
        group: "{{ jupyterhub_app_stat.stat.gr_name }}"
        mode: "0755"

    - name: Place standalone proxy config
      notify: Restart JupyterHub
      ansible.builtin.copy:
        dest: "{{ _jupyterhub_app_standalone_config_dir }}/{{ jupyterhub_app_name }}.conf.py"
        owner: root
        group: "{{ jupyterhub_app_stat.stat.gr_name }}"
        mode: "0644"
        content: "{{ jupyterhub_app_standalone_config }}"
