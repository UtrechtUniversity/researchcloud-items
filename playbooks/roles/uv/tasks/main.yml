---
- name: Install uv with pipx
  ansible.builtin.include_role:
    name: pipx_install_systemwide
  vars:
    pipx_install_systemwide_packages:
      - uv
    pipx_install_location: "{{ uu_pipx_bin }}"
    pipx_install_systemwide_profile: "" # deactivate adding uv path to /etc/profile. We're creating aliases instead.

- name: Install uv alias
  ansible.builtin.file:
    path: /usr/local/bin/uv
    src: "{{ uu_pipx_bin }}/uv"
    state: link
    mode: "0755"
    owner: root
    group: root

- name: Install uv pip alias
  ansible.builtin.copy:
    dest: /usr/local/bin/uv_pip
    mode: "0755"
    owner: root
    group: root
    content: |
      #!/bin/bash
      /usr/local/bin/uv pip "$@"

- name: Define python versions to be installed
  ansible.builtin.set_fact:
    uv_python_versions_install: "{{ (uv_python_versions + (uv_venvs | map(attribute='python') | list)) | unique }}"

- name: Perform uv commands
  become: "{{ uv_become }}"
  become_user: "{{ uv_become_user }}"
  block:

    - name: Install desired python version
      ansible.builtin.command: uv python install -v {{ item }}
      register: _install_desired_python
      changed_when: '"Skipping" not in _install_desired_python.stderr'
      with_items: "{{ uv_python_versions_install }}"

    - name: Set uv python install path facts step 1
      ansible.builtin.command: uv python find {{ item }}
      changed_when: false
      register: _uv_python_finds
      with_items: "{{ uv_python_versions_install }}"

    - name: Set uv python install path facts step 2
      ansible.builtin.set_fact:
        uv_python_paths: "{{ (uv_python_paths | default({})) | combine({item.item: item.stdout}) }}"
      with_items: "{{ _uv_python_finds.results }}"

    - name: Create venvs
      ansible.builtin.command:
        cmd: uv venv --seed --python {{ item.python }} {{ item.path }}
        creates: "{{ item.path }}"
      with_items: "{{ uv_venvs }}"
