#jinja2: trim_blocks:False
# Generated by Ansible

{%-
set defaults = {
  'proxy_read_timeout': '300',
  'proxy_connect_timeout': '300',
  'proxy_send_timeout': '300',
  'send_timeout': '300',
  'client_max_body_size': '10G',
  'proxy_redirect': 'off',
}
%}

{%-
set default_proxy_headers = {
    'X-Real-IP': '$remote_addr',
    'X-Forwarded-For': '$proxy_add_x_forwarded_for',
    'X-Forwarded-Proto': '$scheme',
    'Upgrade': '$http_upgrade',
    'Connection': '$connection_upgrade',
    'Host': '$host'
}
%}

# keys that should not be mapped directly to nginx directives
{%- set special_keys = ['name', 'auth', 'location', 'htpasswd', 'include_reverse_proxy_defaults'] %}

{%- if item.include_reverse_proxy_defaults | default(false) %}
{%- set vhost_properties = dict(defaults, **item) %}
{%- set _ = vhost_properties.update({'proxy_set_header':
  dict(default_proxy_headers, **(vhost_properties.proxy_set_header | default({}) ))
}) %}
{%- else %}
{%- set vhost_properties = item %}
{%- endif %}

{%- if vhost_properties.proxy_pass | default("") | length > 0 %}
{%- set proxy_pass = vhost_properties.proxy_pass %}
{%- set _ = vhost_properties.pop("proxy_pass") %}
{%- endif %}


location {{ vhost_properties.location }} {

    {% if vhost_properties.auth is defined  %}
    {% if vhost_properties.auth == 'sram' %}
    ### Authentication
    error_page 401 = @custom_401;
    auth_request /validate;
    auth_request_set $username $upstream_http_username;
    proxy_set_header REMOTE_USER $username;
    {% elif vhost_properties.auth  == 'basic' %}
    auth_basic "{{ auth.message | default('Secure') }}";
    auth_basic_user_file {{ htpasswd_location }}/{{ vhost_properties.htpasswd }};
    {% elif vhost_properties.auth == 'noauth' %}
    auth_basic "off";
    auth_request "off";
    {% endif %}
    {% endif %}

    # ensure that proxy_pass is placed before the proxy defaults below.
    {% if proxy_pass is defined %}
    proxy_pass {{ proxy_pass }};
    {% endif %}

    {%- set collector = namespace(keys="") -%}
    # loop over the dictionary, mapping key/value pairs to nginx directives
    {% for key, value in vhost_properties.items() if key not in special_keys recursive %}
    {%- set outer_loop = loop -%}
    {%- set old_collector = collector.keys -%}
    {%- set collector.keys = collector.keys~" "~key if not key.startswith('_') -%}
    {%- if value is mapping %}
    {{ loop(value.items())  }}
    {%- elif value is string and value | length > 0 %}
    {{ collector.keys }} {{ value }};
    {%- elif value is iterable %}
    {%- for x in value -%}
    {%- if x is string and x | length > 0 %}
    {{ collector.keys }} {{ x }};
    {%- elif x is mapping -%}
    {{ outer_loop(x.items()) }}
    {%- endif -%}
    {%- endfor -%}
    {% endif %}
    {%- set collector.keys = old_collector -%}
    {% endfor %}
}
