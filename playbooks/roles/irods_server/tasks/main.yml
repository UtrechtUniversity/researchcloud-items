---
- name: Install iRODS server.
  ansible.builtin.package:
    state: present
    name:
      - irods-server
      - irods-database-plugin-postgres
      - irods-rule-engine-plugin-python

- name: Create ICAT database and db user, only if they do not yet exist
  include_tasks: icat.yml
  args:
    apply:
      become: yes
      become_user: postgres

- name: Register if iRODS server is initialized.
  ansible.builtin.stat:
    path: /etc/irods/server_config.json
  register: irods_config_data

- name: Register FQDN (hack needed because hostname FQDN incomplete during workspace deployment)
  set_fact:
    irods_server_host: "{{ workspace_fqdn }}"
  when: workspace_fqdn is defined

- name: Generate zone key
  ansible.builtin.command: 'openssl rand -hex 16'
  register: irods_server_zone_key

- name: Generate negotiation key
  ansible.builtin.command: 'openssl rand -hex 16'
  register: irods_server_negotiation_key

- name: Generate control plane key
  ansible.builtin.command: 'openssl rand -hex 16'
  register: irods_server_control_plane_key

- name: Prepare iRODS server configuration file
  when: not irods_config_data.stat.exists
  ansible.builtin.template:
    src: "server_unattended_config.json.j2"
    dest: "/etc/irods/server_unattended_config.json"
    owner: root
    group: root
    mode: 0600

- name: Bypass hostname check in iRODS setup (hack needed because workspace FQDN != localhost)
  ansible.builtin.lineinfile:
    path: /var/lib/irods/scripts/setup_irods.py
    insertafter: '^def check_hostname'
    state: present
    line: '    return'

      # - name: Run irods configuration script
      # command: python3 /var/lib/irods/scripts/setup_irods.py --json_configuration_file /etc/irods/server_unattended_config.json

      #- name: Start and enable iRODS as service
      #ansible.builtin.service:
      #enabled: true
      #name: irods
      #state: started

