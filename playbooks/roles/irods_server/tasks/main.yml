---
- name: Install prerequisite packages
  when: ansible_pkg_mgr == 'yum' or ansible_pkg_mgr == 'dnf'
  ansible.builtin.package:
    state: present
    name: epel-release

- name: Install iRODS server.
  ansible.builtin.package:
    state: present
    name:
      - irods-server
      - irods-database-plugin-postgres
      - irods-rule-engine-plugin-python
      - irods-icommands

- name: Configure ODBC driver for Rocky 9+
  ansible.builtin.set_fact:
     irods_server_db_driver: "PostgreSQL"
  when: ansible_pkg_mgr == 'dnf'

- name: Create ICAT database and db user and password protect PostgreSQL loopback access
  ansible.builtin.include_tasks: icat.yml
  args:
    apply:
      become: true
      become_user: postgres

- name: Restart Postgresql to ensure password access method is implemented
  ansible.builtin.service:
    name: postgresql
    state: restarted

- name: Register if iRODS server is initialized.
  ansible.builtin.stat:
    path: /etc/irods/server_config.json
  register: irods_config_data

- name: Register FQDN (hack needed because hostname FQDN incomplete during workspace deployment)
  ansible.builtin.set_fact:
    irods_server_host: "{{ workspace_fqdn }}"
  when: workspace_fqdn is defined

# below update of hostname ensures that demoResc iRODS resource will have proper host attribute
- name: Ensure hostname is FQDN (hack needed because hostname FQDN incomplete)
  ansible.builtin.command: hostname "{{ workspace_fqdn }}"
  when: workspace_fqdn is defined

- name: Generate zone key
  ansible.builtin.command: openssl rand -hex 16
  register: irods_server_zone_key

- name: Generate negotiation key
  ansible.builtin.command: openssl rand -hex 16
  register: irods_server_negotiation_key

- name: Generate control plane key
  ansible.builtin.command: openssl rand -hex 16
  register: irods_server_control_plane_key

- name: Prepare iRODS server configuration file
  when: not irods_config_data.stat.exists
  ansible.builtin.template:
    src: server_unattended_config.json.j2
    dest: /etc/irods/server_unattended_config.json
    owner: root
    group: root
    mode: "0600"

- name: Bypass hostname check in iRODS setup (hack needed for irods 4.3.3 because workspace FQDN != localhost)
  ansible.builtin.lineinfile:
    path: /var/lib/irods/scripts/setup_irods.py
    insertafter: ^def check_hostname
    state: present
    line: "    return"

- name: Configure empty python ruleset core.py
  ansible.builtin.copy:
    content: ""
    dest: /etc/irods/core.py
    mode: "0644"
    force: false

- name: Run irods configuration script
  when: irods_server_start == "start"
  ansible.builtin.command: python3 /var/lib/irods/scripts/setup_irods.py --json_configuration_file /etc/irods/server_unattended_config.json
- name: Start and enable iRODS as service
  when: irods_server_start == "start"
  ansible.builtin.service:
    enabled: true
    name: irods
    state: started
