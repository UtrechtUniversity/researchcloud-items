---
# this script is used in either one of two modes:
#   a) server:  create robotuser + generate keypair
#               robotuser_generate_ssh_key == true
#   b) client:  create robotuser, store private key and connection info
#               robotuser_generate_ssh_key == false
#
# NB: The "client" mode is also used to simply load the Ansible robotuser variables
#     using their defaults (and leave tasks 'unchanged')
#
- name: Create robot user
  user:
    name: "{{ robotuser_name }}"
    generate_ssh_key: "{{ robotuser_generate_ssh_key }}"
    state: present

- name: Ensure .ssh directory exists for robotuser
  file:
    path: /home/{{ robotuser_name }}/.ssh/
    state: directory
    mode: "0700"
    owner: "{{ robotuser_name }}"
    group: "{{ robotuser_name }}"

- name: Server mode
  when: robotuser_generate_ssh_key | bool
  block:
    - name: Authorize ssh incoming access for server robot user
      copy:
        src: /home/{{ robotuser_name }}/.ssh/id_rsa.pub
        remote_src: true
        dest: /home/{{ robotuser_name }}/.ssh/authorized_keys
        mode: "0600"
        owner: "{{ robotuser_name }}"
        group: "{{ robotuser_name }}"

- name: Client mode
  when: not robotuser_generate_ssh_key | bool
  block:
    # NB: to avoid loss of a key, script will not overwrite an existing key
    - name: Install private key for client robotuser
      template:
        src: id_rsa.j2
        dest: /home/{{ robotuser_name }}/.ssh/id_rsa
        force: false
        mode: "0700"
        owner: "{{ robotuser_name }}"
        group: "{{ robotuser_name }}"

    - name: Install connection info file in home dir of robotuser
      template:
        src: connection-info.yml.j2
        dest: /home/{{ robotuser_name }}/connection-info.yml
        mode: "0744"
        owner: "{{ robotuser_name }}"

    # NB: if server ip is in other domain then below task is vulnerable to man-in-the-middle
    #     use with care
    - name: Get robotserver host key
      command: ssh-keyscan -p {{ robotuser_server_port }} {{ robotuser_server }}
      changed_when: false
      register: robotuser_hostkeys

    - name: Ensure robotserver is present in known_hosts file
      become: true
      become_user: "{{ robotuser_name }}"
      known_hosts:
        name: "{{ robotuser_server }}"
        path: /home/{{ robotuser_name }}/.ssh/known_hosts
        state: present
        key: "{{ item }}"
        hash_host: true
      with_items: "{{ robotuser_hostkeys.stdout_lines }}"
