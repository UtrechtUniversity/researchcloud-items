# Generated by Ansible

{%
set defaults = {
  'proxy_read_timeout': '300',
  'proxy_connect_timeout': '300',
  'proxy_send_timeout': '300',
  'send_timeout': '300',
  'client_max_body_size': '10G',
  'proxy_redirect': 'off',
}
%}

{%
set default_proxy_headers = {
    'X-Real-IP': '$remote_addr',
    'X-Forwarded-For': '$proxy_add_x_forwarded_for',
    'X-Forwarded-Proto': '$scheme',
    'Upgrade': '$http_upgrade',
    'Connection': '$connection_upgrade',
    'Host': '$host'
}
%}

{% set special_keys = ['name', 'auth', 'location', 'backend', 'htpasswd'] %} # keys that should not be mapped directly to nginx directives
{% set vhost_properties = dict(defaults, **item) %}
{% set proxy_headers = dict(default_proxy_headers, **vhost_properties.get('proxy_set_header', {})) %}

location {{ vhost_properties.location }} {

    {% if vhost_properties.auth is defined  %}
    {% if vhost_properties.auth == 'sram' %}
    ### Authentication
    error_page 401 = @custom_401;
    auth_request /validate;
    auth_request_set $username $upstream_http_username;
    proxy_set_header REMOTE_USER $username;
    {% elif vhost_properties.auth  == 'basic' %}
    auth_basic "{{ auth.message | default('Secure') }}";
    auth_basic_user_file {{ htpasswd_location }}/{{ vhost_properties.htpasswd }};
    {% elif vhost_properties.auth == 'noauth' %}
    auth_basic "off";
    auth_request "off";
    {% endif %}
    {% endif %}

    {% if vhost_properties.backend is defined %}
    proxy_pass {{ vhost_properties.backend }};
    {% endif %}

    {% for property, value in vhost_properties.items() if property not in special_keys %}
    {% if value is string %}
    {{ property }} {{value}};
    {% endif %}
    {% endfor %}

    {% for header, value in proxy_headers.items() %}
    {% if value | length > 0 %}
    proxy_set_header {{ header }} {{ value }};
    {% endif %}
    {% endfor %}
}
