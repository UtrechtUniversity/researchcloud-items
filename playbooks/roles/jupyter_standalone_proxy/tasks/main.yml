---

- name: Create reverse proxy
  ansible.builtin.include_role:
    name: nginx_reverse_proxy
  vars:
    nginx_reverse_proxy_locations:
      - name: jupyterhub
        location: "{{ jupyterhub_uri }}"
        proxy_pass: http://localhost:{{ jupyterhub_port }}
        auth: "{{ 'molecule-notest' in ansible_skip_tags | ternary('noauth', 'sram') }}"

- name: Add regular users to jupyterhub group by default
  ansible.builtin.include_role:
    name: default_group
  vars:
    default_group_group:
      groupname: jupyterhub

- name: Create jupyter user
  ansible.builtin.user:
    name: "{{ jupyter_user }}"
    home: "{{ jupyter_path }}"

- name: Allow jupyter to use sudospawner
  community.general.sudoers:
    name: allow-jupyter-sudospawner
    user: "{{ jupyter_user }}"
    commands: "{{ jupyter_venv }}/bin/sudospawner"
    nopassword: true
    runas: "%jupyterhub"

- name: Install configurable http proxy
  community.general.npm:
    name: configurable-http-proxy
    global: true

- name: Create Jupyter configuration directory
  ansible.builtin.file:
    path: /etc/jupyterhub/
    state: directory

- name: Create jupyter configuration
  ansible.builtin.template:
    src: templates/jupyterhub_config.py.j2
    dest: /etc/jupyterhub/jupyterhub_config.py

- name: Create venv with uv
  ansible.builtin.include_role:
    name: uv
  vars:
    uv_become_user: "{{ jupyter_user }}"
    uv_become: true
    uv_venvs:
      - path: "{{ jupyter_venv }}"
        python: "{{ system_python_version }}"

- name: Install PyPi dependencies
  ansible.builtin.pip:
    executable: uv_pip
    name:
      - sudospawner
      - jupyterhub
      - jhub-remote-user-authenticator
      - git+https://github.com/jupyterhub/jupyter-server-proxy.git[standalone]
  environment:
    VIRTUAL_ENV: "{{ jupyter_venv }}"
    CC: gcc # https://github.com/astral-sh/uv/issues/6488

- name: Create jupyter systemd config
  ansible.builtin.template:
    dest: /usr/lib/systemd/system/jupyterhub.service
    src: templates/jupyterhub.service.j2
    owner: root
    group: root
    mode: "0644"

- name: Reload jupyterhub service
  ansible.builtin.systemd:
    state: restarted
    daemon_reload: true
    name: jupyterhub

- name: Ensure Jupyterhub is started
  register: start_jupyterhub
  ansible.builtin.service:
    name: jupyterhub
    state: restarted
    enabled: true
