---
- name: Install package sshfs
  package:
    name: sshfs
    state: present

- name: Ensure that local mountpoint exists
  file:
    path: "{{ sshfs_mountpoint }}"
    state: directory
    owner: "{{ sshfs_username }}"

- name: Enable user_allow_other in fuse config
  tags: molecule-idempotence-notest
  lineinfile:
    path: /etc/fuse.conf
    regexp: '^(#)?user_allow_other$'
    line: 'user_allow_other'
    state: present

- name: Set mount options
  set_fact:
    sshfs_mount_options:
      src: "sshfs#{{ sshfs_username }}@{{ sshfs_server }}:{{ sshfs_sourcepath }}"
      path: "{{ sshfs_mountpoint }}"
      fstype: "fuse"
      opts: "_netdev,port={{ sshfs_server_port }},user,idmap=user,allow_other,default_permissions,reconnect,ServerAliveInterval=20,ServerAliveCountMax=5"

# below is a hack to split the task of mounting the remote filesystem
# in two parts so that privileged part of update /etc/fstab is done by root
# Note that to make this work, only the 'state' differs  
- name: Add remote filesystem to /etc/fstab
  mount: "{{ sshfs_mount_options | combine({'state': 'present'}) }}"

- name: Mount remote filesystem using credentials of robot user
  tags: molecule-idempotence-notest
  become: true
  become_user: "{{ sshfs_username }}"
  mount: "{{ sshfs_mount_options | combine({'state': 'mounted'}) }}"
